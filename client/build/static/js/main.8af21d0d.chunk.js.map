{"version":3,"sources":["assets/img/myphoto.jpg","components/loginPage.js","components/chatscreen.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","HKloginPage","state","modal","displaySigninOrSignup","document","getElementById","window","onclick","event","target","style","display","getElementsByClassName","type","preventDefault","formElements","elements","postData","i","length","name","value","username","password","undefined","confirmpassword","alert","this","props","fetchUserDetails","setState","react_default","a","createElement","id","className","onSubmit","required","Fragment","color","cursor","onClick","onClickSignInLink","bind","key","gridColumn","onLoginFormSubmit","React","Component","connect","logInState","dispatch","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","ChatScreen","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","WebSocket","MozWebSocket","selectedUser","targetUser","loggedInOnlineStatus","targetUserLoggedInStatus","chatObject","incomingChatObject","addEventListener","sendOnlineStatus","fetchAllUsers","nextProps","setupWebsocketConnection","loggingInOnlineState","navigator","onLine","data","_this2","connection","location","host","onopen","msg","send","onerror","error","console","log","onmessage","message","parse","e","String","sourceUser","objectSpread","Array","isArray","push","justifySelf","chatstatement","_id","el","getElementsByTagName","scrollIntoView","which","keyCode","onClickSubmit","chatmessage","concat","_this3","clickedUser","allUsers","find","defineProperty","_this4","gridRow","src","myImg","alt","alignSelf","alignItems","justifyContent","fontSize","marginRight","aria-hidden","onLoginIconClick","height","width","borderRadius","backgroundColor","border","minHeight","_username","onUserClick","map","user","textDecoration","float","loginPage","marginLeft","onKeyUp","onSubmitChat","App","chatscreen","Boolean","hostname","match","initialState","reducer","arguments","action","store","createStore","ReactDOM","render","es","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8af21d0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myphoto.5ebdd676.jpg\";","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HKloginPage extends React.Component{\r\n\r\n    state={\r\n        modal:true,\r\n        displaySigninOrSignup:true\r\n    }\r\n\r\n    componentDidMount(){\r\n        var modal=document.getElementById(\"loginPage\")\r\n        window.onclick = function(event) {\r\n            if (event.target === modal) {\r\n                modal.style.display = \"none\";\r\n            }\r\n        }\r\n        \r\n        var span= document.getElementsByClassName(\"close\");\r\n        span[0].onclick=function(){\r\n            modal.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    onLoginFormSubmit(type,event){\r\n        event.preventDefault();\r\n        var formElements=document.getElementById(\"loginForm\").elements;    \r\n        var postData={};\r\n        postData[\"type\"]=type;\r\n        for (var i=0; i<formElements.length; i++)\r\n            if (formElements[i].type!==\"submit\" && formElements[i].type!==\"button\"){//we dont want to include the submit-buttom\r\n                postData[formElements[i].name]=formElements[i].value;\r\n            }\r\n        \r\n        if(!postData.username || !postData.password){\r\n            alert(\"Please enter username and password\")\r\n        }else if(postData.confirmpassword !==undefined && postData.password !==postData.confirmpassword){\r\n            alert(\"password mismatch\");\r\n        }else{\r\n            this.props.fetchUserDetails(postData);\r\n            document.getElementById(\"loginPage\").style.display=\"none\"\r\n        }\r\n    }\r\n\r\n    onClickSignInLink(){\r\n        this.setState({\r\n            displaySigninOrSignup:!this.state.displaySigninOrSignup\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"loginPage\">\r\n                <div id=\"modal\" style={{display:this.state.modal?\"grid\":\"none\"}}>\r\n                    <span className=\"close\">&times;</span>\r\n                    {/* <p>HK Login Page !!!!</p> */}\r\n                    \r\n                        <form id=\"loginForm\" /* method=\"post\" action=\"/loginUser\" */ onSubmit={(event)=>{event.preventDefault()}}>\r\n                            <label>username : </label><input type=\"text\" name=\"username\" required={true}></input>\r\n                            <label>password : </label><input type=\"text\" name=\"password\" required={true}></input>\r\n                            {\r\n                            this.state.displaySigninOrSignup?\r\n                            <React.Fragment>\r\n                                <u style={{color:\"blue\",cursor:\"pointer\"}} onClick={this.onClickSignInLink.bind(this)}>Sign up</u>\r\n                                <input type=\"submit\" value=\"Login\" key=\"loginbutton\" style={{gridColumn:\"2/3\"}} onClick={this.onLoginFormSubmit.bind(this,\"signin\")}></input>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                                <label>confirm password : </label><input type=\"text\" key=\"confirmpassword\" name=\"confirmpassword\"></input>\r\n                                <label>passcode : </label><input type=\"text\" key=\"passcode\" name=\"passcode\"></input>\r\n                                <u style={{color:\"blue\",cursor:\"pointer\"}} onClick={this.onClickSignInLink.bind(this)}>Sign in</u>\r\n                                <input type=\"submit\" value=\"signup\" key=\"signupbutton\" style={{gridColumn:\"2/3\"}} onClick={this.onLoginFormSubmit.bind(this,\"signup\")}></input>\r\n                            </React.Fragment>\r\n                            }\r\n                        </form> \r\n                </div>\r\n                    {/* <p>HK Login Page !!!!</p> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n      logInState:state.logInState,\r\n      username:state.username\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n      fetchUserDetails:(postData)=>{\r\n        fetch(\"/loginUser\",{\r\n        //fetch(\"http://localhost:8081/loginUser\",{\r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body:JSON.stringify(postData)\r\n        }).then(res=>res.json()).then((res)=>{\r\n            dispatch({type:\"FETCH_USER\",value:res})\r\n        });\r\n      }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HKloginPage);","import React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport HKloginPage from \"./loginPage\";\r\nimport {connect} from \"react-redux\";\r\nimport myImg from \"../assets/img/myphoto.jpg\";\r\nimport \"../assets/css/stylesheet.css\"\r\n\r\nclass ChatScreen extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        // if user is running mozilla then use it's built-in WebSocket\r\n        window.WebSocket = window.WebSocket || window.MozWebSocket;\r\n        this.state={\r\n            selectedUser:\"\",\r\n            targetUser:null,\r\n            loggedInOnlineStatus:false,\r\n            targetUserLoggedInStatus:false,\r\n            chatObject:{},\r\n            incomingChatObject:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener(\"online\",this.sendOnlineStatus.bind(this));\r\n        window.addEventListener(\"offline\",this.sendOnlineStatus.bind(this));\r\n        this.props.fetchAllUsers();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.id!==this.props.id){\r\n            this.setupWebsocketConnection(JSON.stringify({type:\"sendLoginId\",id:nextProps.id,loggingInOnlineState:navigator.onLine}))\r\n        }\r\n        if(nextProps.username!==\"unauthorized user\" && nextProps.username){\r\n            this.setState({\r\n                loggedInOnlineStatus:navigator.onLine\r\n            })\r\n        }\r\n    }\r\n\r\n    setupWebsocketConnection(data){\r\n        this.connection=new WebSocket('ws://'+window.location.host+'/echo');\r\n        //this.connection=new WebSocket('wss://localhost:8081/echo');\r\n        this.connection.onopen =  (msg)=> {\r\n            // this.connection is opened and ready to use;\r\n            this.connection.send(data);\r\n        };\r\n\r\n        this.connection.onerror = function (error) {\r\n            // an error occurred when sending/receiving data\r\n            console.log(error)\r\n        };\r\n\r\n        this.connection.onmessage =  (message)=> {\r\n            // try to decode json (I assume that each message\r\n            // from server is json)\r\n            try {\r\n                var json = JSON.parse(message.data);\r\n            } catch (e) {\r\n            console.log('This doesn\\'t look like a valid JSON: ',\r\n                message.data);\r\n            return;\r\n            }\r\n            // handle incoming message\r\n            //console.log(json);\r\n            if(json.type===\"sendMessage\"){\r\n                var a=String(json.targetUser) +String(json.sourceUser)\r\n                var chatObject={...this.state.chatObject};\r\n                var incomingChatObject={...this.state.incomingChatObject};\r\n                if(Array.isArray( chatObject[a])){\r\n                    chatObject[a].push(<p key={chatObject[a].length+1} style={{justifySelf:\"left\"}}>{json.chatstatement}</p>);\r\n                    \r\n                }else{\r\n                    chatObject[a]=[<p key={1} style={{justifySelf:\"left\"}}>{json.chatstatement}</p>];\r\n                };\r\n                console.log(this.state.selectedUser._id,String(json.sourceUser))\r\n                if(Array.isArray( incomingChatObject[a]) && this.state.selectedUser._id!==String(json.sourceUser)){\r\n                    incomingChatObject[a].push(<p key={chatObject[a].length+1} style={{justifySelf:\"left\"}}>{json.chatstatement}</p>);\r\n                }else if(this.state.selectedUser._id!==String(json.sourceUser)){\r\n                    incomingChatObject[a]=[<p key={chatObject[a].length+1} style={{justifySelf:\"left\"}}>{json.chatstatement}</p>]\r\n                }\r\n                this.setState({\r\n                    chatObject:chatObject,\r\n                    incomingChatObject:incomingChatObject\r\n                }, ()=>{\r\n                    var el=document.getElementById(\"chatArea\").getElementsByTagName(\"p\");\r\n                    el[el.length-1].scrollIntoView();\r\n                })\r\n            }else if(json.type===\"checkOnlineStatus\"){\r\n                this.setState({\r\n                    targetUserLoggedInStatus:json.targetUserLoggedInStatus\r\n                })\r\n            }\r\n        };\r\n    }\r\n\r\n    sendOnlineStatus(){\r\n        this.setState({\r\n            loggedInOnlineStatus:navigator.onLine\r\n        })\r\n    }\r\n\r\n    onSubmitChat(event){\r\n        var x= event.which || event.keyCode;\r\n        if(x===13){\r\n            this.onClickSubmit.bind(this)()\r\n        }\r\n    }\r\n\r\n    onClickSubmit(){\r\n        if(this.props.username!==\"unauthorized user\" && this.props.username && this.state.selectedUser && document.getElementById(\"chatInput\").value){\r\n            this.connection.send(JSON.stringify({\r\n                type:\"sendMessage\",\r\n                chatmessage:'HK',\r\n                chatstatement:document.getElementById(\"chatInput\").value,\r\n                sourceUser:this.props.id,\r\n                targetUser:this.state.targetUser\r\n            }));\r\n            var a=String(this.props.id) +String(this.state.targetUser);\r\n            var chatObject={...this.state.chatObject};\r\n            if(Array.isArray( chatObject[a])){\r\n                chatObject[a].push(<p style={{justifySelf:\"right\"}} key={this.state.chatObject[a].length+1}>{document.getElementById(\"chatInput\").value}</p>);\r\n                \r\n            }else{\r\n                chatObject[a]=[<p style={{justifySelf:\"right\"}} key={1}>{document.getElementById(\"chatInput\").value}</p>]\r\n            }\r\n            this.setState({\r\n                chatObject:chatObject\r\n            }, ()=>{\r\n                var el=document.getElementById(\"chatArea\").getElementsByTagName(\"p\");\r\n                el[el.length-1].scrollIntoView();\r\n            })\r\n            \r\n            document.getElementById(\"chatInput\").value=\"\";\r\n        }else{\r\n            alert(\"User is \"+this.props.username +` and chatting with ${this.state.selectedUser}`)\r\n        }\r\n    }\r\n\r\n    onLoginIconClick(){\r\n        document.getElementById(\"loginPage\").style.display=\"block\"\r\n    }\r\n\r\n    onUserClick(event){\r\n        console.log(event.target);\r\n        var clickedUser=this.props.allUsers.find((a)=>{return a._id===event.target.id})\r\n        this.setState({\r\n            selectedUser:clickedUser,\r\n            targetUser:event.target.id,\r\n            incomingChatObject:{\r\n                ...this.state.incomingChatObject,\r\n                [String(this.props.id)+String(clickedUser._id)]:undefined\r\n            }\r\n        },\r\n        ()=>{\r\n            if(this.connection){\r\n                this.connection.send(JSON.stringify({\r\n                    type:\"checkOnlineStatus\",\r\n                    targetUser:this.state.targetUser,\r\n                    sourceUser:this.props.id\r\n                }))\r\n            }\r\n        }); \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <header>\r\n                    <div style={{gridRow:\"1/4\",gridColumn:\"1/2\"}} >\r\n                        <img src={myImg} alt=\"Vivek_pic\"></img>\r\n                    </div>\r\n                    <span style={{alignSelf:\"center\",justifySelf:\"center\",gridRow:\"1/3\",gridColumn:\"2/3\"}}>Simple ChatBot<br/> <span>By</span><br/> Vivek Kumar Singh</span>\r\n                    \r\n                    <span style={{gridRow:\"1/2\",gridColumn:\"3/4\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n                        <span style={{fontSize:\"24px\",color:\"blue\",marginRight:\"16px\"}} className =\"fa fa-user\" aria-hidden=\"true\" onClick={this.onLoginIconClick.bind(this)}>\r\n\r\n                        </span>\r\n                    {\r\n                        this.props.username!==\"unauthorized user\" && this.props.username ?\r\n                        <React.Fragment><span>{this.props.username}</span><div style={{height:\"8px\",width:\"8px\",borderRadius:\"50%\",backgroundColor:this.state.loggedInOnlineStatus?\"green\":\"red\"}}></div></React.Fragment>:\r\n                        <span onClick={this.onLoginIconClick.bind(this)}>Login</span>\r\n                    }\r\n                    </span>\r\n                    <input style={{gridRow:\"2/3\",gridColumn:\"3/4\"}}></input>\r\n                    <span style={{gridRow:\"3/4\",gridColumn:\"2/3\",border:\"1px solid blue\",display:\"flex\",alignItems:\"center\",minHeight: \"32px\"}}>\r\n                        <span>{this.state.selectedUser._username}</span>{this.state.selectedUser?<div style={{height:\"8px\",width:\"8px\",backgroundColor:this.state.targetUserLoggedInStatus?\"green\":\"red\",borderRadius:\"50%\"}}></div>:\"\"}\r\n                    </span>\r\n                    <button style={{gridRow:\"3/4\",gridColumn:\"3/4\",border:\"1px solid blue\"}}>Search</button>\r\n                </header>\r\n                <div id=\"userList\" onClick={this.onUserClick.bind(this)}>\r\n                    {\r\n                        this.props.allUsers?this.props.allUsers.map((user)=>{\r\n                            return <p key={user._id} id={user._id} style={{cursor:\"pointer\",textDecoration:\"underline\",color:\"blue\"}}>{user._username} <span style={{float:\"right\",marginRight:\"8%\"}}>{this.state.incomingChatObject[String(this.props.id)+String(user._id)]?this.state.incomingChatObject[String(this.props.id)+String(user._id)].length:\"\"}</span></p>\r\n                        }):\"\"\r\n                    }\r\n                </div>\r\n                <HKloginPage></HKloginPage>\r\n                <div id=\"mobileviewUL\" onClick={this.onUserClick.bind(this)}>\r\n                        {\r\n                            this.props.allUsers?this.props.allUsers.map((user)=>{\r\n                                return <span key={user._id} id={user._id} style={{cursor:\"pointer\",textDecoration:\"underline\",color:\"blue\",marginLeft:\"8px\"}}>{user._username} <span style={{float:\"right\",marginRight:\"8%\"}}>{this.state.incomingChatObject[String(this.props.id)+String(user._id)]?this.state.incomingChatObject[String(this.props.id)+String(user._id)].length:\"\"}</span></span>\r\n                            }):\"\"\r\n                        }\r\n                    </div>\r\n                <div id=\"chatArea\">\r\n                    {this.state.chatObject[String(this.props.id)+String(this.state.targetUser)]?\r\n                        this.state.chatObject[String(this.props.id)+String(this.state.targetUser)]:\"\"}\r\n                </div>\r\n                {/* <div id=\"data\"></div> */}\r\n                <div style={{display:\"flex\",alignItems:\"center\",border:\"1px solid blue\",gridRow:\"3/3\"}}>\r\n                    <input id=\"chatInput\" onKeyUp={this.onSubmitChat.bind(this)}/>\r\n                    <span style={{height:\"100%\",cursor:\"pointer\",width:\"4%\",fontSize:\"21px\"}} onClick={this.onClickSubmit.bind(this)}>&#10148;</span>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n      logInState:state.logInState,\r\n      username:state.username,\r\n      allUsers:state.allUsers,\r\n      id:state.id\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        fetchAllUsers:()=>{\r\n            fetch(\"/fetchAllUsers\").then((res)=>res.json()).then((res)=>{\r\n            //fetch(\"http://localhost:8081/fetchAllUsers\").then((res)=>res.json()).then((res)=>{\r\n                dispatch({type:\"FETCH_ALLUSERS\",value:res})\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ChatScreen);","import React, { Component } from 'react';\r\n\r\nimport ChatScreen from \"./components/chatscreen\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ChatScreen></ChatScreen>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState={\r\n        logInState:false,\r\n        username:null,\r\n        allUsers:[],\r\n        id:null\r\n}\r\n\r\n/* var setupWebsocketConnection=function(data){\r\n    if(initialState.connection){\r\n        initialState.connection.close(initialState.username);\r\n        //return;\r\n    }\r\n    initialState.connection=new WebSocket('ws://127.0.0.1:8081/echo');\r\n    initialState.connection.onopen =  (msg)=> {\r\n        // this.connection is opened and ready to use;\r\n        initialState.connection.send(JSON.stringify(data));\r\n        //console.log(msg)\r\n    };\r\n\r\n    initialState.connection.onerror = function (error) {\r\n        // an error occurred when sending/receiving data\r\n        console.log(error)\r\n    };\r\n\r\n    initialState.connection.onmessage = function (message) {\r\n        // try to decode json (I assume that each message\r\n        // from server is json)\r\n        try {\r\n            console.log(message.data)\r\n        var json = JSON.parse(message.data);\r\n        } catch (e) {\r\n        console.log('This doesn\\'t look like a valid JSON: ',\r\n            message.data);\r\n        return;\r\n        }\r\n        // handle incoming message\r\n        console.log(json)\r\n    };\r\n} */\r\n\r\nconst reducer=(state=initialState,action)=>{\r\n    if(action.type===\"FETCH_USER\"){\r\n        //setupWebsocketConnection(action.value)\r\n        return {\r\n            ...state,\r\n            logInState:action.value.logInState,\r\n            username:action.value.username,\r\n            id:action.value.id\r\n        }\r\n    }\r\n    if(action.type===\"FETCH_ALLUSERS\"){\r\n        return{\r\n            ...state,\r\n            allUsers:action.value\r\n        }\r\n    }\r\n    return{...state}\r\n}\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {createStore} from \"redux\";\r\nimport reducer from \"./store/reducer\"\r\n\r\nconst store=createStore(reducer);\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}